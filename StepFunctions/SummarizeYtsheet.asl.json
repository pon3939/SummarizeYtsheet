{
  "Comment": "A description of my state machine",
  "StartAt": "Pass Input Parallel",
  "States": {
    "Pass Input Parallel": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Pass Input",
          "States": {
            "Pass Input": {
              "Type": "Pass",
              "End": true
            }
          }
        },
        {
          "StartAt": "Get Environment",
          "States": {
            "Get Environment": {
              "Type": "Task",
              "Resource": "arn:aws:states:::dynamodb:getItem",
              "Parameters": {
                "TableName": "environments",
                "Key": {
                  "id": {
                    "N.$": "States.Format('{}', $.EnvironmentId)"
                  }
                }
              },
              "Next": "Select Players",
              "ResultSelector": {
                "Items": [],
                "SeasonId.$": "$.Item.season_id.N"
              }
            },
            "Select Players": {
              "Type": "Task",
              "Next": "Select Players Loop",
              "Parameters": {
                "TableName": "players",
                "ProjectionExpression": "id, ytsheet_ids",
                "KeyConditionExpression": "season_id = :season_id",
                "ExpressionAttributeValues": {
                  ":season_id": {
                    "N.$": "$.SeasonId"
                  }
                }
              },
              "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
              "ResultPath": "$.Players"
            },
            "Select Players Loop": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.Players.LastEvaluatedKey",
                  "IsPresent": true,
                  "Next": "Join Items"
                }
              ],
              "Default": "Join Last Items"
            },
            "Join Last Items": {
              "Type": "Pass",
              "Next": "Flat Last Items",
              "Parameters": {
                "Items.$": "States.Array($.Items, $.Players.Items)",
                "SeasonId.$": "$.SeasonId"
              }
            },
            "Flat Last Items": {
              "Type": "Pass",
              "Next": "Init Loop",
              "Parameters": {
                "Items.$": "$.Items[*][*]",
                "SeasonId.$": "$.SeasonId"
              }
            },
            "Init Loop": {
              "Type": "Pass",
              "Next": "Get Ytsheet Data Loop",
              "Parameters": {
                "Players.$": "$.Items",
                "Index": 0,
                "MaxIndex.$": "States.ArrayLength($.Items)",
                "SeasonId.$": "$.SeasonId"
              }
            },
            "Join Items": {
              "Type": "Pass",
              "Next": "Flat Items",
              "Parameters": {
                "Items.$": "States.Array($.Items, $.Players.Items)",
                "LastEvaluatedKey.$": "$.Players.LastEvaluatedKey",
                "SeasonId.$": "$.SeasonId"
              }
            },
            "Flat Items": {
              "Type": "Pass",
              "Next": "Select Separated Players",
              "Parameters": {
                "Items.$": "$.Items[*][*]",
                "LastEvaluatedKey.$": "$.LastEvaluatedKey",
                "SeasonId.$": "$.SeasonId"
              }
            },
            "Select Separated Players": {
              "Type": "Task",
              "Next": "Select Players Loop",
              "Parameters": {
                "TableName": "players",
                "ExclusiveStartKey.$": "$.LastEvaluatedKey",
                "ProjectionExpression": "id, ytsheet_ids",
                "KeyConditionExpression": "season_id = :season_id",
                "ExpressionAttributeValues": {
                  ":season_id": {
                    "N.$": "$.SeasonId"
                  }
                }
              },
              "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
              "ResultPath": "$.Players"
            },
            "Get Ytsheet Data Loop": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.Index",
                  "NumericLessThanPath": "$.MaxIndex",
                  "Next": "Pass Loop Data Parallel"
                }
              ],
              "Default": "End"
            },
            "Pass Loop Data Parallel": {
              "Type": "Parallel",
              "Next": "Get Ytsheet Data Loop",
              "Branches": [
                {
                  "StartAt": "Get Ytsheet Data",
                  "States": {
                    "Get Ytsheet Data": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::lambda:invoke",
                      "Parameters": {
                        "Payload.$": "$",
                        "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:GetYtsheetData:$LATEST"
                      },
                      "Retry": [
                        {
                          "ErrorEquals": [
                            "Lambda.ServiceException",
                            "Lambda.AWSLambdaException",
                            "Lambda.SdkClientException",
                            "Lambda.TooManyRequestsException"
                          ],
                          "IntervalSeconds": 2,
                          "MaxAttempts": 6,
                          "BackoffRate": 2
                        }
                      ],
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Pass Loop Data",
                  "States": {
                    "Pass Loop Data": {
                      "Type": "Pass",
                      "End": true,
                      "Parameters": {
                        "Players.$": "$.Players",
                        "Index.$": "States.MathAdd($.Index, 1)",
                        "MaxIndex.$": "$.MaxIndex",
                        "SeasonId.$": "$.SeasonId"
                      }
                    }
                  }
                }
              ],
              "OutputPath": "$[1]"
            },
            "End": {
              "Type": "Pass",
              "End": true
            }
          }
        }
      ],
      "Next": "Start UpdateYtsheetSpreadSheet",
      "OutputPath": "$[0]"
    },
    "Start UpdateYtsheetSpreadSheet": {
      "Type": "Task",
      "Resource": "arn:aws:states:::states:startExecution.sync:2",
      "Parameters": {
        "StateMachineArn": "arn:aws:states:ap-northeast-1:759821454976:stateMachine:UpdateYtsheetSpreadSheet",
        "Input": {
          "EnvironmentId.$": "$.EnvironmentId",
          "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
        }
      },
      "End": true
    }
  }
}
