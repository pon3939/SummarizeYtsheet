{
  "Comment": "A description of my state machine",
  "StartAt": "Get Master Data Parallel",
  "States": {
    "Get Master Data Parallel": {
      "Type": "Parallel",
      "Next": "Format Ytsheet Data",
      "Branches": [
        {
          "StartAt": "Get Environment",
          "States": {
            "Get Environment": {
              "Type": "Task",
              "Resource": "arn:aws:states:::dynamodb:getItem",
              "Parameters": {
                "TableName": "environments",
                "Key": {
                  "id": {
                    "N.$": "States.Format('{}', $.EnvironmentId)"
                  }
                }
              },
              "ResultSelector": {
                "Environment": {
                  "SpreadsheetId.$": "$.Item.spreadsheet_id.S",
                  "SeasonId.$": "$.Item.season_id.N"
                }
              },
              "Next": "Get Level Cap"
            },
            "Get Level Cap": {
              "Type": "Task",
              "Parameters": {
                "TableName": "level_caps",
                "KeyConditionExpression": "season_id = :season_id AND start_datetime <= :start_datetime",
                "ExpressionAttributeValues": {
                  ":start_datetime": {
                    "S.$": "$$.State.EnteredTime"
                  },
                  ":season_id": {
                    "N.$": "$.Environment.SeasonId"
                  }
                },
                "ScanIndexForward": false,
                "Limit": 1
              },
              "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
              "ResultSelector": {
                "MaxExp.$": "$.Items[0].max_exp.N",
                "MinimumExp.$": "$.Items[0].minimum_exp.N"
              },
              "End": true,
              "ResultPath": "$.LevelCap"
            }
          }
        },
        {
          "StartAt": "Get Google Service Account",
          "States": {
            "Get Google Service Account": {
              "Type": "Task",
              "Resource": "arn:aws:states:::dynamodb:getItem",
              "Parameters": {
                "TableName": "google_service_accounts",
                "Key": {
                  "id": {
                    "N": "1"
                  }
                }
              },
              "ResultSelector": {
                "auth_provider_x509_cert_url.$": "$.Item.auth_provider_x509_cert_url.S",
                "auth_uri.$": "$.Item.auth_uri.S",
                "client_email.$": "$.Item.client_email.S",
                "client_id.$": "$.Item.client_id.S",
                "client_x509_cert_url.$": "$.Item.client_x509_cert_url.S",
                "private_key.$": "$.Item.private_key.S",
                "private_key_id.$": "$.Item.private_key_id.S",
                "project_id.$": "$.Item.project_id.S",
                "token_uri.$": "$.Item.token_uri.S",
                "type.$": "$.Item.type.S",
                "universe_domain.$": "$.Item.universe_domain.S"
              },
              "End": true
            }
          }
        }
      ],
      "ResultSelector": {
        "Environment.$": "$[0].Environment",
        "LevelCap.$": "$[0].LevelCap",
        "GoogleServiceAccount.$": "$[1]"
      }
    },
    "Format Ytsheet Data": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:FormatYtsheetData:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Update Spread Sheet Parallel",
      "ResultPath": "$.FormatResult"
    },
    "Update Spread Sheet Parallel": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Reorder Worksheets",
          "States": {
            "Reorder Worksheets": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:ReorderWorksheets:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "Update Player Sheet",
          "States": {
            "Update Player Sheet": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:UpdatePlayerSheet:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "Update Basic Data Sheet",
          "States": {
            "Update Basic Data Sheet": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:UpdateBasicDataSheet:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "Update Skill Level Sheet",
          "States": {
            "Update Skill Level Sheet": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:UpdateSkillLevelSheet:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "Update Status Sheet",
          "States": {
            "Update Status Sheet": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:UpdateStatusSheet:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "Update Combat Skill Sheet",
          "States": {
            "Update Combat Skill Sheet": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:UpdateCombatSkillSheet:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "Update Honor Sheet",
          "States": {
            "Update Honor Sheet": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:UpdateHonorSheet:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "Update Abyss Curse Sheet",
          "States": {
            "Update Abyss Curse Sheet": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:UpdateAbyssCurseSheet:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "Update General Skill Sheet",
          "States": {
            "Update General Skill Sheet": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "arn:aws:lambda:ap-northeast-1:759821454976:function:UpdateGeneralSkillSheet:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        }
      ],
      "End": true,
      "Parameters": {
        "SpreadsheetId.$": "$.Environment.SpreadsheetId",
        "GoogleServiceAccount.$": "$.GoogleServiceAccount",
        "Players.$": "$.FormatResult.Payload.Players"
      }
    }
  }
}
